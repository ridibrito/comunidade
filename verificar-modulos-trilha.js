const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

const supabase = createClient(supabaseUrl, supabaseKey);

async function verificarTrilha() {
  const trailId = '87691353-8b61-49bd-9a30-6bdf3987d668';
  
  console.log('üîç Verificando trilha:', trailId);
  console.log('');
  
  // 1. Buscar info da trilha
  const { data: trail, error: trailError } = await supabase
    .from('trails')
    .select('id, title, slug')
    .eq('id', trailId)
    .single();
  
  if (trailError) {
    console.error('‚ùå Erro ao buscar trilha:', trailError.message);
    return;
  }
  
  console.log('‚úÖ Trilha encontrada:');
  console.log(`   T√≠tulo: ${trail.title}`);
  console.log(`   Slug: ${trail.slug}`);
  console.log('');
  
  // 2. Buscar m√≥dulos dessa trilha
  const { data: modules, error: modulesError } = await supabase
    .from('modules')
    .select('id, title, position')
    .eq('trail_id', trailId)
    .order('position');
  
  if (modulesError) {
    console.error('‚ùå Erro ao buscar m√≥dulos:', modulesError.message);
    return;
  }
  
  console.log(`üìã M√≥dulos encontrados: ${modules?.length || 0}`);
  
  if (modules && modules.length > 0) {
    modules.forEach((mod, i) => {
      console.log(`   ${i + 1}. ${mod.title} (posi√ß√£o: ${mod.position})`);
    });
  } else {
    console.log('   ‚ö†Ô∏è Esta trilha n√£o possui m√≥dulos!');
    console.log('');
    console.log('üí° SOLU√á√ÉO:');
    console.log('   Para ver os marcos funcionando, voc√™ precisa:');
    console.log('   1. Criar m√≥dulos para esta trilha no admin');
    console.log('   2. OU usar uma trilha que j√° tenha m√≥dulos');
    console.log('');
    console.log('üîç Buscando outras trilhas com m√≥dulos...');
    console.log('');
    
    // Buscar trilhas que t√™m m√≥dulos
    const { data: allTrails } = await supabase
      .from('trails')
      .select(`
        id,
        title,
        slug,
        modules:modules(count)
      `);
    
    if (allTrails) {
      const trilhasComModulos = allTrails.filter((t) => t.modules && t.modules.length > 0 && t.modules[0].count > 0);
      
      if (trilhasComModulos.length > 0) {
        console.log(`‚úÖ Encontradas ${trilhasComModulos.length} trilhas com m√≥dulos:`);
        trilhasComModulos.forEach((t, i) => {
          console.log(`   ${i + 1}. ${t.title} (${t.slug})`);
        });
      } else {
        console.log('‚ö†Ô∏è Nenhuma trilha possui m√≥dulos no momento.');
        console.log('   Voc√™ precisa criar m√≥dulos no admin para ver os marcos!');
      }
    }
  }
  
  console.log('');
  console.log('='.repeat(60));
}

verificarTrilha();

